
# This file has been generated at Thu Jul 26 16:29:58 2012

from openalea.core import *


__name__ = 'alinea.caribu'

__editable__ = True
__description__ = ' Caribu package '
__license__ = ''
__url__ = ''
__alias__ = ['Caribu']
__version__ = '0.0.4'
__authors__ = 'M. Chelle,C. Fournier'
__institutes__ = 'INRA'
__icon__ = 'Caribou.png'


__all__ = ['LIE', 'CaribuScene_functional_newFileCaribuScene', '_135112784', 'reduceDict_reduceDict', 'MCSail_MCSail', 'S2v_S2v', 'CaribuScene_functional_newCaribuScene', 'CarribuZenithParSoil', 'filterby_filterby', 'mtg_updateMTG', 'PARaggregators_PARaggregators', 'label_decode_label', 'CaribuScene_functional_WriteCan', 'Periodise_Periodise', 'vcaributest2', 'CaribuScene_functional_newObjCaribuScene', 'Canestra_Canestra', 'CaribuScene_functional_addShapes', '_135113488', 'mtg_to_canestra', 'CaribuZenithPar', 'CaribuScene_functional_GenOutput', 'label_encode_label', 'CaribuScene_functional_runCaribu', 'caribu_vcaribu', '_135112688', 'mydict_mydict', 'CaribuScene_functional_addSoil', 'CaribuScene_functional_output_by_id', 'CaribuScene_functional_getIncidentEnergy', 'selectOutput_selectOutput', 'PARsums', 'Tutorial', 'debug', 'lightString_lightString', 'CaribuScene_functional_getEi']



LIE = CompositeNodeFactory(name='LIE',
                             description='Computes Light interception efficiency',
                             category='scene.light',
                             doc='',
                             inputs=[  {  'desc': '', 'interface': IData, 'name': 'CaribuScene', 'value': None},
   {  'desc': '', 'interface': None, 'name': 'EnergyDict', 'value': None}],
                             outputs=[  {  'desc': '', 'interface': None, 'name': 'Efficience'},
   {  'desc': '', 'interface': None, 'name': 'Total sol'},
   {  'desc': '', 'interface': None, 'name': 'Total Incident'}],
                             elt_factory={  2: ('alinea.caribu', 'selectOutput'),
   3: ('alinea.caribu', 'selectOutput'),
   4: ('alinea.caribu', 'filterby'),
   5: ('openalea.python method', 'sum'),
   6: ('openalea.function operator', 'function'),
   8: ('alinea.caribu', 'getIncidentEnergy'),
   10: ('openalea.math', '/'),
   11: ('openalea.math', '-')},
                             elt_connections={  3913088: (5, 0, '__out__', 1),
   3913100: ('__in__', 0, 8, 0),
   3913112: (5, 0, 11, 1),
   3913124: ('__in__', 1, 2, 0),
   3913136: (4, 0, 5, 0),
   3913148: (8, 2, '__out__', 2),
   3913160: (11, 0, 10, 0),
   3913172: (8, 2, 11, 0),
   3913184: ('__in__', 1, 3, 0),
   3913196: (3, 0, 4, 0),
   3913208: (2, 0, 4, 1),
   3913220: (10, 0, '__out__', 0),
   3913232: (8, 2, 10, 1),
   3913244: (6, 0, 4, 2)},
                             elt_data={  2: {  'block': False,
         'caption': 'selectOutput',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x080DAA10> : "selectOutput"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -321.25,
         'posy': 175.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'selectOutput',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x080DAA10> : "selectOutput"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -470.0,
         'posy': 176.25,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'filterby',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x080DA830> : "filterby"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -442.7277117384844,
         'posy': 298.3948736998514,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'sum',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x09ECF2D0> : "sum"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -405.42793462109955,
         'posy': 371.1664190193165,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'function',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x09C258B0> : "function"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -323.7696695442879,
         'posy': 251.8220684489089,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'getIncidentEnergy',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x080DAB50> : "getIncidentEnergy"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -157.03194650817235,
         'posy': 118.96359583952452,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': '/',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x088D43F0> : "/"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -121.25,
          'posy': 483.75,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': '-',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x088D4370> : "-"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -216.25000000000003,
          'posy': 426.25000000000006,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': -423.5,
                'posy': -39.25,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': -318.625,
                 'posy': 640.0,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, 'None'), (1, "'Einc'")],
   3: [(0, 'None'), (1, "'Opt'")],
   4: [],
   5: [],
   6: [(0, "'def f(x):\\n  return x == 0.'")],
   8: [],
   10: [],
   11: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [-321.25, 175.0], 'userColor': None, 'useUserColor': False},
   3: {'position': [-470.0, 176.25], 'userColor': None, 'useUserColor': False},
   4: {'position': [-442.7277117384844, 298.3948736998514], 'userColor': None, 'useUserColor': False},
   5: {'position': [-405.42793462109955, 371.1664190193165], 'userColor': None, 'useUserColor': False},
   6: {'position': [-323.7696695442879, 251.8220684489089], 'userColor': None, 'useUserColor': False},
   7: {  'position': [-335.0, 373.75], 'useUserColor': False, 'userColor': None},
   8: {'position': [-157.03194650817235, 118.96359583952452], 'userColor': None, 'useUserColor': False},
   10: {'position': [-121.25, 483.75], 'userColor': None, 'useUserColor': False},
   11: {'position': [-216.25000000000003, 426.25000000000006], 'userColor': None, 'useUserColor': False},
   '__in__': {'position': [-423.5, -39.25], 'userColor': None, 'useUserColor': False},
   '__out__': {'position': [-318.625, 640.0], 'userColor': None, 'useUserColor': False}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




CaribuScene_functional_newFileCaribuScene = Factory(name='FileCaribuScene',
                authors='C. Fournier',
                description='',
                category='io',
                nodemodule='CaribuScene_functional',
                nodeclass='newFileCaribuScene',
                inputs=[{'interface': IFileStr(filter="*.can", save=False), 'name': 'CanFile', 'value': None, 'desc': ''}, {'interface': IFileStr(filter="*.light", save=False), 'name': 'LightFile', 'value': None, 'desc': ''}, {'interface': IFileStr(filter="*.8", save=False), 'name': 'PatternFile', 'value': None, 'desc': ''}, {'interface': IFileStr(filter="*.opt", save=False), 'name': 'OptFile', 'value': None, 'desc': ''}],
                outputs=[{'interface': IStr, 'name': 'CaribuScene', 'desc': ''}, {'interface': IDict, 'name': 'Maping dict (see CaribuScene)'}],
                widgetmodule=None,
                widgetclass=None,
               )




_135112784 = CompositeNodeFactory(name='Caribu with turtle',
                             description='',
                             category='demo',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('alinea.caribu', 'Caribu'),
   3: ('alinea.caribu', 'CaribuScene'),
   4: ('alinea.caribu.visualisation', 'Plot CaribuScene'),
   5: ('alinea.caribu.visualisation', 'ViewMapOnCan'),
   6: ('openalea.file', 'start'),
   7: ('openalea.file', 'start'),
   9: ('openalea.file', 'start'),
   10: ('alinea.adel.wheat', 'Write_Table'),
   11: ('alinea.caribu', 'LIE'),
   12: ('alinea.caribu', 'addSoil'),
   13: ('alinea.caribu', 'selectOutput'),
   14: ('openalea.data structure', 'int'),
   15: ('alinea.caribu.visualisation', 'colorScale'),
   16: ('openalea.math', 'min'),
   17: ('openalea.math', 'max'),
   18: ('openalea.data structure', 'float'),
   19: ('openalea.data structure', 'float'),
   20: ('openalea.data file', 'get_data'),
   22: ('openalea.data file', 'get_data'),
   23: ('openalea.data file', 'get_data'),
   24: ('alinea.Caribu.Sky_tools', 'Turtle'),
   25: ('openalea.python method', 'zip')},
                             elt_connections={  5223628: (24, 0, 25, 0),
   5223640: (24, 2, 25, 1),
   5223652: (13, 0, 17, 0),
   5223664: (2, 1, 10, 0),
   5223676: (2, 0, 11, 0),
   5223688: (13, 0, 5, 1),
   5223700: (19, 0, 5, 4),
   5223712: (20, 0, 3, 0),
   5223724: (22, 0, 7, 0),
   5223736: (18, 0, 5, 3),
   5223748: (20, 0, 6, 0),
   5223760: (18, 0, 15, 0),
   5223772: (13, 0, 16, 0),
   5223784: (2, 1, 13, 0),
   5223796: (23, 0, 3, 3),
   5223808: (22, 0, 3, 2),
   5223820: (25, 0, 3, 1),
   5223832: (3, 0, 12, 0),
   5223844: (16, 0, 18, 0),
   5223868: (2, 1, 11, 1),
   5223880: (14, 0, 5, 2),
   5223892: (17, 0, 19, 0),
   5223904: (3, 0, 4, 0),
   5223916: (19, 0, 15, 1),
   5223928: (23, 0, 9, 0),
   5223940: (13, 1, 15, 2),
   5223952: (2, 0, 5, 0),
   5223964: (12, 0, 2, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'Caribu',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x080ED2F0> : "Caribu"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 136.25,
         'posy': 431.25,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'CaribuScene',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x08074EB0> : "CaribuScene"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 90.0,
         'posy': 176.25,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'Plot CaribuScene',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x08E5E830> : "Plot CaribuScene"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -85.0,
         'posy': 365.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'ViewMapOnCan',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x08E5E890> : "ViewMapOnCan"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 367.0674303064819,
         'posy': 621.9407543154739,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'start',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0955A1B0> : "start"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 59.11023541853166,
         'posy': 70.02289426502992,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'start',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0955A1B0> : "start"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 305.5511770926588,
         'posy': 67.29145894411536,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'start',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0955A1B0> : "start"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 437.4124714878451,
         'posy': 69.11023541853177,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'Write_Table',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x098148D0> : "Write_Table"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 577.4999999999999,
          'posy': 472.4999999999999,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'LIE',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x08074F30> : "LIE"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 141.25,
          'posy': 573.75,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'addSoil',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08074FB0> : "addSoil"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 108.75,
          'posy': 297.5,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'selectOutput',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x080ED2D0> : "selectOutput"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 350.0,
          'posy': 485.0,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': '1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08C067F0> : "int"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 395.19512719420374,
          'posy': 557.5835093861078,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'colorScale',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08E5E870> : "colorScale"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 564.9543655155713,
          'posy': 621.5211608804805,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'min',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x088EB150> : "min"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 467.9154566309955,
          'posy': 519.8199993858218,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': 'max',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x088EB2F0> : "max"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 510.53419611406684,
          'posy': 518.872068084441,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': '0.0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08C06730> : "float"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 469.60352077632126,
          'posy': 558.8076830198584,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': '8.0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08C06730> : "float"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 512.4142471187716,
          'posy': 556.5036606414395,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   20: {  'block': False,
          'caption': "get 'can' data",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x097A6CB0> : "get_data"',
          'hide': True,
          'id': 20,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -66.3853413161973,
          'posy': 26.37225887903727,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': "get '8' data",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x097A6CB0> : "get_data"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 232.80011811600428,
          'posy': 22.731435320914514,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': "get 'opt' data",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x097A6CB0> : "get_data"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 363.7520242739822,
          'posy': 18.18449413487359,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   24: {  'block': False,
          'caption': 'Turtle',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x0853C090> : "Turtle"',
          'hide': True,
          'id': 24,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 119.92458542639523,
          'posy': 20.606758242897726,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': 'zip',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x09A8CC30> : "zip"',
          'hide': True,
          'id': 25,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 135.8592640284939,
          'posy': 63.618304307882795,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (0, '<CaribuScene.CaribuScene object at 0x0BC92A50>'),
         (1, 'True'),
         (2, "{'SphereDiameter': 0.5, 'Nz': 5, 'Zmax': 2}")],
   3: [  (  0,
            "'d:\\\\openaleapkg\\\\caribu\\\\src\\\\caribu\\\\data\\\\f331s1_100plantes.can'"),
         (  2,
            "'d:\\\\openaleapkg\\\\caribu\\\\src\\\\caribu\\\\data\\\\maize.8'"),
         (  3,
            "'d:\\\\openaleapkg\\\\caribu\\\\src\\\\caribu\\\\data\\\\par.opt'")],
   4: [],
   5: [],
   6: [],
   7: [],
   9: [],
   10: [(1, 'None'), (2, 'True')],
   11: [],
   12: [(1, '0.0'), (2, 'True')],
   13: [(1, "'EiSup'")],
   14: [(0, '1')],
   15: [],
   16: [],
   17: [],
   18: [],
   19: [],
   20: [  (0, "'alinea.caribu.data'"),
          (1, "'*.can'"),
          (2, "'f331s1_100plantes.can'")],
   22: [(0, "'alinea.caribu.data'"), (1, "'*.8'"), (2, "'maize.8'")],
   23: [(0, "'alinea.caribu.data'"), (1, "'*.opt'"), (2, "'par.opt'")],
   24: [(0, "'16'"), (1, "'soc'"), (2, '1.0')],
   25: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [136.25, 431.25], 'useUserColor': False, 'userColor': None},
   3: {  'position': [90.0, 176.25], 'useUserColor': False, 'userColor': None},
   4: {  'position': [-85.0, 365.0], 'useUserColor': False, 'userColor': None},
   5: {  'position': [367.0674303064819, 621.9407543154739],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [59.11023541853166, 70.02289426502992],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [305.5511770926588, 67.29145894411536],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [437.4124714878451, 69.11023541853177],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [577.4999999999999, 472.4999999999999],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [141.25, 573.75],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [108.75, 297.5], 'useUserColor': False, 'userColor': None},
   13: {  'position': [350.0, 485.0], 'useUserColor': False, 'userColor': None},
   14: {  'position': [395.19512719420374, 557.5835093861078],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [564.9543655155713, 621.5211608804805],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [467.9154566309955, 519.8199993858218],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [510.53419611406684, 518.872068084441],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [469.60352077632126, 558.8076830198584],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [512.4142471187716, 556.5036606414395],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-66.3853413161973, 26.37225887903727],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [232.80011811600428, 22.731435320914514],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [363.7520242739822, 18.18449413487359],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [119.92458542639523, 20.606758242897726],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [135.8592640284939, 63.618304307882795],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [20.0, 5.0],
                'useUserColor': True,
                'userColor': None},
   '__out__': {  'position': [20.0, 250.0],
                 'useUserColor': True,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




reduceDict_reduceDict = Factory(name='reduceDict',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='apply dictionary reduction ',
                category='Unclassified',
                nodemodule='reduceDict',
                nodeclass='reduceDict',
                inputs=[{'interface': None, 'name': 'dictlist', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'reduceddict', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




MCSail_MCSail = Factory(name='MCSail',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='Compute mean fluxes on layered canopy',
                category='scene.canopy',
                nodemodule='MCSail',
                nodeclass='MCSail',
                inputs=[{'interface': None, 'name': 'Sailscene'}, {'interface': IBool, 'name': 'Sleep', 'value': False}],
                outputs=[{'interface': IStr, 'name': 'Fluxes'}, {'interface': IStr, 'name': 'Log'}],
                widgetmodule=None,
                widgetclass=None,
               )




S2v_S2v = Factory(name='S2v',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='Transform a 3D CaribuScene into a 1D Sail Scene',
                category='codec',
                nodemodule='S2v',
                nodeclass='S2v',
                inputs=[{'interface': None, 'name': 'CaribuScene', 'value': None, 'desc': ''}, {'interface': IInt, 'name': 'Number of layers', 'value': 5, 'desc': ''}, {'interface': IFloat, 'name': 'ZmaxLayer', 'value': 2.0, 'desc': ''}, {'interface': IBool, 'name': 'Sleep', 'value': False, 'desc': ''}],
                outputs=[{'interface': IStr, 'name': 'SailScene', 'desc': ''}, {'interface': ISequence, 'name': 'TriangleLayerLabels', 'desc': ''}, {'interface': IStr, 'name': 'Log', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




CaribuScene_functional_newCaribuScene = Factory(name='CaribuScene',
                authors='C. Fournier',
                description='',
                category='io',
                nodemodule='CaribuScene_functional',
                nodeclass='newCaribuScene',
                inputs=[{'interface': IFileStr(filter="*.can", save=False), 'name': 'Scene', 'value': None, 'desc': 'see help tab'}, {'interface': IFileStr(filter="*.light", save=False), 'name': 'LightFile', 'value': None, 'desc': 'see help tab'}, {'interface': IFileStr(filter="*.8", save=False), 'name': 'PatternFile', 'value': None, 'desc': 'see help tab'}, {'interface': IFileStr(filter="*.opt", save=False), 'name': 'OptFile', 'value': None, 'desc': 'see help tab'}],
                outputs=[{'interface': IStr, 'name': 'CaribuScene', 'desc': ''}, {'interface': IDict, 'name': 'Maping of Scene id -> Caribu internals ids'}],
                widgetmodule=None,
                widgetclass=None,
               )




CarribuZenithParSoil = CompositeNodeFactory(name='CarribuZenithParSoil',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[  {  'desc': '', 'interface': IData, 'name': 'CanScene', 'value': None},
   {  'desc': '', 'interface': ISequence, 'name': 'Pattern', 'value': None}],
                             outputs=[  {  'desc': '', 'interface': None, 'name': 'CaribuScene'},
   {  'desc': '', 'interface': None, 'name': 'CaribuOutDict'},
   {  'desc': '', 'interface': None, 'name': 'Scene_id_to_caribu_id'}],
                             elt_factory={  2: ('alinea.caribu.data', 'par4.opt'),
   3: ('alinea.caribu', 'Caribu'),
   5: ('alinea.caribu', 'addSoil'),
   11: ('alinea.caribu.data', 'zenith.light'),
   13: ('alinea.caribu', 'CaribuScene')},
                             elt_connections={  30455228: (5, 1, '__out__', 2),
   30455240: (13, 0, 5, 0),
   30455252: ('__in__', 0, 13, 0),
   30455264: ('__in__', 1, 13, 2),
   30455276: (11, 0, 13, 1),
   30455288: (3, 0, '__out__', 0),
   30455300: (3, 1, '__out__', 1),
   30455312: (5, 0, 3, 0),
   30455324: (2, 0, 13, 3)},
                             elt_data={  2: {  'block': False,
         'caption': 'par4.opt',
         'delay': 0,
         'factory': '<openalea.core.data.DataFactory object at 0x084C91B0> : "par4.opt"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 401.8115542781534,
         'posy': 11.418437541630556,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'Caribu',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0813CA90> : "Caribu"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 130.98720317145722,
         'posy': 168.82277142056157,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'addSoil',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0813CB10> : "addSoil"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 203.62829508722552,
         'posy': 116.35062467215072,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   11: {  'block': False,
          'caption': 'zenith.light',
          'delay': 0,
          'factory': '<openalea.core.data.DataFactory object at 0x084C90B0> : "zenith.light"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set([2]),
          'posx': 278.43042703347976,
          'posy': -28.827954318698602,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'CaribuScene',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x0813C7D0> : "CaribuScene"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 143.25047959371562,
          'posy': 46.22794321532277,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 180.86311239193083,
                'posy': -163.39121037463977,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 203.0446198457057,
                 'posy': 265.7409722906167,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (0, 'PackageData(alinea.caribu.data, par4.opt)'),
         (1, 'None'),
         (2, 'None')],
   3: [  (1, 'True'),
         (2, "{'SphereDiameter': 0.5, 'Nz': 5, 'Zmax': 2}"),
         (3, 'True'),
         (4, 'True')],
   5: [(1, '0.0'), (2, 'True')],
   11: [  (0, 'PackageData(alinea.caribu.data, zenith.light)'),
          (1, 'None'),
          (2, 'None')],
   13: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [401.8115542781534, 11.418437541630556],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [130.98720317145722, 168.82277142056157],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [56.8620711240156, 101.4296403833792],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [203.62829508722552, 116.35062467215072],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [145.0, 186.25], 'useUserColor': False, 'userColor': None},
   7: {  'position': [311.25, 77.5], 'useUserColor': False, 'userColor': None},
   8: {  'position': [210.0, 75.0], 'useUserColor': False, 'userColor': None},
   9: {  'position': [301.25, 7.5], 'useUserColor': False, 'userColor': None},
   10: {  'position': [191.25, 7.5], 'useUserColor': False, 'userColor': None},
   11: {  'position': [278.43042703347976, -28.827954318698602],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [143.25047959371562, 46.22794321532277],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [180.86311239193083, -163.39121037463977],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [203.0446198457057, 265.7409722906167],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




filterby_filterby = Factory(name='filterby',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='Return values whose indices match condition',
                category='Unclassified',
                nodemodule='filterby',
                nodeclass='filterby',
                inputs=[{'interface': ISequence, 'name': 'indices', 'value': None, 'desc': ''}, {'interface': ISequence, 'name': 'values', 'value': None, 'desc': ''}, {'interface': IFunction, 'name': 'condition', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'values', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




mtg_updateMTG = Factory(name='updateMTG',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='',
                category='data i/o',
                nodemodule='mtg',
                nodeclass='updateMTG',
                inputs=[{'interface': None, 'name': 'mtg', 'value': None, 'desc': ''}, {'interface': None, 'name': 'caribu output', 'value': None, 'desc': ''}, {'interface': None, 'name': 'mtg id for triangles', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'prefix for mtg property', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'updated mtg', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




PARaggregators_PARaggregators = Factory(name='PARaggregators',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='returns a dict of aggregators (0/1) for summing Eabs at different levels',
                category='Unclassified',
                nodemodule='PARaggregators',
                nodeclass='PARaggregators',
                inputs=[{'interface': None, 'name': 'aggregation table', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'aggegators', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




label_decode_label = Factory(name='decode label',
                authors='C. Fournier',
                description='',
                category='io',
                nodemodule='label',
                nodeclass='decode_label',
                inputs=[{'interface': ISequence, 'name': 'canLabels'}],
                outputs=[{'interface': ISequence, 'name': 'optical species'}, {'interface': ISequence, 'name': 'Opacity'}, {'interface': ISequence, 'name': 'Plant id'}, {'interface': ISequence, 'name': 'Element id'}],
                widgetmodule=None,
                widgetclass=None,
               )




CaribuScene_functional_WriteCan = Factory(name='WriteCan',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='',
                category='io',
                nodemodule='CaribuScene_functional',
                nodeclass='WriteCan',
                inputs=[{'interface': IInterface, 'name': 'CaribuScene', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'filename', 'value': None, 'desc': ''}],
                outputs=[{'interface': IFileStr, 'name': 'filename', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




Periodise_Periodise = Factory(name='Periodise',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='Fit the scene within its pattern',
                category='scene',
                nodemodule='CaribuScene_functional',
                nodeclass='periodise',
                inputs=[{'interface': None, 'name': 'CaribuScene'}, 
                {'interface': IBool, 'name': 'Copy Caribuscene', 'value': True, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'FittedCaribuScene'}],
                widgetmodule=None,
                widgetclass=None,
               )




vcaributest2 = CompositeNodeFactory(name='vcaributest2',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('alinea.caribu', 'vcaribu'),
   3: ('alinea.caribu.data', 'filterT.can'),
   4: ('alinea.caribu.data', 'zenith.light'),
   5: ('alinea.caribu.data', 'par.opt'),
   6: ('openalea.data structure.dict', 'dict'),
   7: ('openalea.flow control', 'annotation'),
   8: ('openalea.file', 'read'),
   9: ('openalea.file', 'read'),
   10: ('openalea.file', 'read')},
                             elt_connections={  9988924: (9, 0, 2, 2),
   9988936: (6, 0, 2, 4),
   9988948: (4, 0, 10, 0),
   9988960: (10, 0, 2, 1),
   9988972: (5, 0, 9, 0),
   9988984: (3, 0, 8, 0),
   9988996: (8, 0, 2, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'vcaribu',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 195.46600843048085,
         'posy': 235.00000000000003,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'filterT.can',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 56.25,
         'posy': 118.75,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'zenith.light',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 112.5,
         'posy': 53.75,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': 'par.opt',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 222.5,
         'posy': 97.5,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': 'Caribu options',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 362.96600843048077,
         'posy': 139.5339915695191,
         'priority': 0,
         'user_application': None},
   7: {  'posx': 66.63928340912645,
         'posy': 3.9199578475956756,
         'txt': 'Test of vcaribu, the visualea interface to the caribu script (class Caribu)'},
   8: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 92.5,
         'posy': 186.25,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 251.25,
         'posy': 158.75,
         'priority': 0,
         'user_application': None},
   10: {  'block': False,
          'caption': 'read',
          'hide': True,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 155.0,
          'posy': 146.25,
          'priority': 0,
          'user_application': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [(3, 'None')],
   3: [  (0, 'PackageData(alinea.caribu.data, filterT.can)'),
         (1, 'None'),
         (2, 'None')],
   4: [  (0, 'PackageData(alinea.caribu.data, zenith.light)'),
         (1, 'None'),
         (2, 'None')],
   5: [  (0, 'PackageData(alinea.caribu.data, par.opt)'),
         (1, 'None'),
         (2, 'None')],
   6: [  (  0,
            "{'wavelength': 'par', 'Hc': None, 'Nz': None, 'Ds': None, '1st': True, 'infinity': False}")],
   7: [],
   8: [],
   9: [],
   10: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




CaribuScene_functional_newObjCaribuScene = Factory(name='ObjCaribuScene',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='',
                category='codec,scene',
                nodemodule='CaribuScene_functional',
                nodeclass='newObjCaribuScene',
                inputs=[{'interface': IData, 'name': 'CanObj', 'value': None, 'desc': 'Canopy object with to_canestra method'}, {'interface': IStr, 'name': 'LightString', 'value': None, 'desc': ''}, {'interface': ISequence, 'name': 'pattern', 'value': None, 'desc': 'Tuple describig pattern'}, {'interface': IStr, 'name': 'optstring', 'value': None, 'desc': 'Optical properties'}, {'interface': IStr, 'name': 'wavelength', 'value': None, 'desc': 'Current wavelength'}],
                outputs=[{'interface': IStr, 'name': 'CaribuScene', 'desc': ''}, {'interface': IDict, 'name': 'Mapid', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




Canestra_Canestra = Factory(name='Canestra',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='Nested radiosity illumination of a 3D Scene ',
                category='scene.light',
                nodemodule='Canestra',
                nodeclass='Canestra',
                inputs=[{'interface': None, 'name': 'CaribuScene', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'SailFluxes', 'value': None, 'desc': ''}, {'interface': IBool, 'name': 'No Multiple Scattering', 'value': True, 'desc': ''}, {'interface': IFloat, 'name': 'Sphere Diameter', 'value': 0.5, 'desc': ''}, {'interface': IBool, 'name': 'keep FF in Scene', 'value': False, 'desc': ''}],
                outputs=[{'interface': IStr, 'name': 'CaribuScene', 'desc': ''}, {'interface': IStr, 'name': 'Etri', 'desc': ''}, {'interface': IStr, 'name': 'Eabs', 'desc': ''}, {'interface': IStr, 'name': 'Log', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




CaribuScene_functional_addShapes = Factory(name='addShapes',
                authors='C. Fournier',
                description='',
                category='io',
                nodemodule='CaribuScene_functional',
                nodeclass='addShapes',
                inputs=[{'interface': None, 'name': 'CaribuScene', 'value': None, 'desc': ''},
                {'interface': None, 'name': 'Shapes', 'value': None, 'desc': ''}, 
                {'interface': None, 'name': 'Tesselator', 'value': None, 'desc': 'PlantGL tesselator instance or None'}, 
                {'interface': None, 'name': 'CanLabels', 'value': None, 'desc': 'Labels used by Caribu to make the association between opticals properties and shapes '}, 
                {'interface': IBool, 'name': 'auto generates Can labels', 'value' : True, 'desc': 'uses opt=1 and opak = 0 for all primitives, see label encode for alternatives'},
                {'interface': IBool, 'name': 'Copy Caribuscene', 'value': True, 'desc': 'uncheck only if you know what you do (pass by reference)'}],
                outputs=[{'interface': None, 'name': 'CaribuScene', 'desc': ''}, {'interface': IDict, 'name': 'Shape_id2Caribu_id', 'desc': 'mapping of shapes id to internal caribu id'}],
                widgetmodule=None,
                widgetclass=None,
               )

CaribuScene_functional_resetScene = Factory(name='resetScene',
                authors='C. Fournier',
                description='reset Scene/output of a CaribuScene object',
                category='io',
                nodemodule='CaribuScene_functional',
                nodeclass='addShapes',
                inputs=[{'interface': None, 'name': 'CaribuScene', 'value': None, 'desc': ''},
                    {'interface': IBool, 'name': 'Copy Caribuscene', 'value': True, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'CaribuScene', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )
__all__.append('CaribuScene_functional_resetScene')



_135113488 = CompositeNodeFactory(name='Directional gap fraction',
                             description='Compute the directional gap fraction of a scene after making it infinite',
                             category='data processing',
                             doc='',
                             inputs=[  {  'desc': '', 'interface': None, 'name': 'CanMTG', 'value': None},
   {  'desc': '', 'interface': None, 'name': 'Pattern', 'value': None},
   {  'desc': 'zenithal direction of view',
      'interface': IFloat,
      'name': 'zenith angle',
      'value': 0},
   {  'desc': 'azimuthal direction of view',
      'interface': IFloat,
      'name': 'azimuth angle',
      'value': 0}],
                             outputs=[{  'desc': '', 'interface': None, 'name': 'Gap fraction'}],
                             elt_factory={  2: ('alinea.caribu', 'Caribu'),
   4: ('alinea.caribu', 'addSoil'),
   5: ('alinea.caribu', 'selectOutput'),
   6: ('alinea.caribu.data', 'par.opt'),
   7: ('alinea.caribu', 'light string'),
   8: ('alinea.caribu', 'ObjCaribuScene'),
   9: ('openalea.file', 'read'),
   10: ('alinea.caribu', 'selectOutput'),
   11: ('alinea.caribu', 'filterby'),
   12: ('openalea.function operator', 'function'),
   13: ('openalea.python method', 'mean')},
                             elt_connections={  9988816: (5, 0, 11, 1),
   9988828: ('__in__', 0, 8, 0),
   9988840: (13, 0, '__out__', 0),
   9988852: (2, 1, 10, 0),
   9988864: ('__in__', 2, 7, 1),
   9988876: ('__in__', 3, 7, 2),
   9988888: (9, 0, 8, 3),
   9988900: (8, 0, 4, 0),
   9988912: (4, 0, 2, 0),
   9988924: (11, 0, 13, 0),
   9988936: (2, 1, 5, 0),
   9988948: (6, 0, 9, 0),
   9988960: (12, 0, 11, 2),
   9988972: (10, 0, 11, 0),
   9988984: (7, 0, 8, 1),
   9988996: ('__in__', 1, 8, 2)},
                             elt_data={  2: {  'block': False,
         'caption': 'Caribu',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 636.25,
         'posy': 471.25,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'addSoil',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 608.75,
         'posy': 402.5,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': 'selectOutput',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 73.75,
         'posy': 325.0,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': 'par.opt',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 675.0,
         'posy': 148.75,
         'priority': 0,
         'user_application': None},
   7: {  'block': False,
         'caption': 'light string',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 545.0,
         'posy': 148.75,
         'priority': 0,
         'user_application': None},
   8: {  'block': False,
         'caption': 'ObjCaribuScene',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 547.5,
         'posy': 336.25,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': 'read',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 670.0,
         'posy': 236.25,
         'priority': 0,
         'user_application': None},
   10: {  'block': False,
          'caption': 'selectOutput',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -75.0,
          'posy': 326.25,
          'priority': 0,
          'user_application': None},
   11: {  'block': False,
          'caption': 'filterby',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 51.25,
          'posy': 451.25,
          'priority': 0,
          'user_application': None},
   12: {  'block': False,
          'caption': 'function',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 138.80165289256206,
          'posy': 398.96694214876027,
          'priority': 0,
          'user_application': None},
   13: {  'block': False,
          'caption': 'mean',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 60.0,
          'posy': 523.75,
          'priority': 0,
          'user_application': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 418.75,
                'posy': 37.5,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 605.0,
                 'posy': 691.25,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [(1, 'True'), (2, "{'SphereDiameter': 0.5, 'Nz': 5, 'Zmax': 2}")],
   4: [],
   5: [(1, "'EiSup'")],
   6: [  (0, 'PackageData(alinea.caribu.data, par.opt)'),
         (1, 'None'),
         (2, 'None')],
   7: [(0, '1')],
   8: [(4, "'par'")],
   9: [],
   10: [(1, "'Opt'")],
   11: [],
   12: [(0, "'def f(x):\\n  return x == 0.'")],
   13: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




mtg_to_canestra = Factory(name='MtgToCan',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='Give a canestra repr of MTG',
                category='data i/o',
                nodemodule='mtg',
                nodeclass='to_canestra',
                inputs=[{'interface': None, 'name': 'MTG', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'Property to use as OptId', 'value': 'optical_specie', 'desc': ''}, {'interface': IStr, 'name': 'Property to use as opacity', 'value': 'transparency', 'desc': ''}, {'interface': IStr, 'name': 'Property to use as Geometry', 'value': 'geometry', 'desc': ''}, {'interface': IInt, 'name': 'Deault for optid', 'value': 1, 'desc': ''}, {'interface': IInt, 'name': 'Defalt for opacity', 'value': 0, 'desc': ''}, {'interface': IFloat(min=0, max=16777216, step=0.000001), 'name': 'minimal area', 'value': 1e-05, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'mtgId', 'desc': 'list of mtd id associated with triangles'}, {'interface': None, 'name': 'CanString', 'desc': 'Canestra input file'}],
                widgetmodule=None,
                widgetclass=None,
               )




CaribuZenithPar = CompositeNodeFactory(name='CaribuZenithPar',
                             description='Run Caribu with default PO and one ligth source at zenith',
                             category='Unclassified',
                             doc='',
                             inputs=[  {  'desc': '', 'interface': IData, 'name': 'CanScene', 'value': None},
   {  'desc': '', 'interface': ISequence, 'name': 'Pattern', 'value': None}],
                             outputs=[  {  'desc': '', 'interface': None, 'name': 'CaribuScene'},
   {  'desc': '', 'interface': None, 'name': 'CaribuOutDict'},
   {  'desc': '', 'interface': IDict, 'name': 'sceneid_to_caribu_id'}],
                             elt_factory={  3: ('alinea.caribu', 'Caribu'),
   4: ('alinea.caribu', 'CaribuScene'),
   9: ('alinea.caribu.data', 'par4.opt'),
   10: ('alinea.caribu.data', 'zenith.light')},
                             elt_connections={  30455240: (4, 1, '__out__', 2),
   30455252: (10, 0, 4, 1),
   30455264: (4, 0, 3, 0),
   30455276: (3, 0, '__out__', 0),
   30455288: ('__in__', 1, 4, 2),
   30455300: ('__in__', 0, 4, 0),
   30455312: (9, 0, 4, 3),
   30455324: (3, 1, '__out__', 1)},
                             elt_data={  3: {  'block': False,
         'caption': 'Caribu',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0813CA90> : "Caribu"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 154.4437992450155,
         'posy': 251.34250656600204,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'CaribuScene',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0813C7D0> : "CaribuScene"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 174.9993200559596,
         'posy': 179.39628789656157,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'par4.opt',
         'delay': 0,
         'factory': '<openalea.core.data.DataFactory object at 0x084C91B0> : "par4.opt"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 356.78693961024334,
         'posy': 80.16767619411947,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'zenith.light',
          'delay': 0,
          'factory': '<openalea.core.data.DataFactory object at 0x084C90B0> : "zenith.light"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set([2]),
          'posx': 249.28997549594638,
          'posy': 73.45451760902998,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 207.06322486503532,
                'posy': -27.30222969508967,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 215.13082402100522,
                 'posy': 323.847891364252,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  3: [  (1, 'True'),
         (2, "{'SphereDiameter': 0.5, 'Nz': 5, 'Zmax': 2}"),
         (3, 'True'),
         (4, 'True')],
   4: [],
   9: [  (0, 'PackageData(alinea.caribu.data, par4.opt)'),
         (1, 'None'),
         (2, 'None')],
   10: [  (0, 'PackageData(alinea.caribu.data, zenith.light)'),
          (1, 'None'),
          (2, 'None')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  3: {  'position': [154.4437992450155, 251.34250656600204],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [174.9993200559596, 179.39628789656157],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [49.53717627401838, 112.23266499582289],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [145.0, 186.25], 'useUserColor': False, 'userColor': None},
   7: {  'position': [311.25, 77.5], 'useUserColor': False, 'userColor': None},
   8: {  'position': [210.0, 75.0], 'useUserColor': False, 'userColor': None},
   9: {  'position': [356.78693961024334, 80.16767619411947],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [249.28997549594638, 73.45451760902998],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [207.06322486503532, -27.30222969508967],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [215.13082402100522, 323.847891364252],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




CaribuScene_functional_GenOutput = Factory(name='GenOutput',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='Generate a dictionnary from canestra outputs (Etri,Eabs)',
                category='codec',
                nodemodule='CaribuScene_functional',
                nodeclass='GenOutput',
                inputs=[{'interface': IStr, 'name': 'Etri', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'Eabs', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'OutDict', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




label_encode_label = Factory(name='encode label',
                authors='C. Fournier',
                description='',
                category='io',
                nodemodule='label',
                nodeclass='encode_label',
                inputs=[{'interface': IInt, 'name': 'optical species', 'value': 1}, {'interface': IInt, 'name': 'Opacity', 'value': 1, 'desc': '0 means transparent(leaves), 1 means opak (stems)'}, {'interface': IInt, 'name': 'Plant id', 'value': 1}, {'interface': IInt, 'name': 'element id', 'value': 1}, {'interface': IInt, 'name': 'minimal length for the output', 'value': 1}],
                outputs=[{'interface': ISequence, 'name': 'canLabels', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




CaribuScene_functional_runCaribu = Factory(name='Caribu',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='',
                category='Unclassified',
                nodemodule='CaribuScene_functional',
                nodeclass='runCaribu',
                inputs=[{'interface': None, 'name': 'CaribuScene', 'value': None, 'desc': ''}, {'interface': IBool, 'name': 'No Multiple Scaterring', 'value': True, 'desc': 'Turn off multiple scattering calculations'}, {'interface': IDict, 'name': 'Multiple scattering options :', 'value': {'SphereDiameter': 0.5, 'Nz': 5, 'Zmax': 2}, 'desc': 'Dictionary of parameters for multiple scaterring'}, {'interface': IBool, 'name': 'Consider Toric Canopy (infinite)', 'value': True}],
                outputs=[{'interface': None, 'name': 'CaribuScene', 'value': None, 'desc': ''}, {'interface': IDict, 'name': 'Energy'}],
                widgetmodule=None,
                widgetclass=None,
               )




caribu_vcaribu = Factory(name='vcaribu',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='Visualea interface to Caribu class',
                category='model',
                nodemodule='caribu',
                nodeclass='vcaribu',
                inputs=[{'interface': IFileStr, 'name': 'canopy', 'value': None, 'desc': "file '.can' or file content representing the 3d scene"}, {'interface': IFileStr, 'name': 'lightsource', 'value': None, 'desc': 'file or file content describing light sources (direction, irradiance)'}, {'interface': None, 'name': 'optics', 'value': None, 'desc': 'list of files/files contents defining optical property'}, {'interface': IFileStr, 'name': 'pattern', 'value': None, 'desc': 'file/file content that defines a domain to till the scene'}, {'interface': None, 'name': 'options', 'value': None, 'desc': 'dictionarry allowing to set user option.Available options are:\n        \n        1st: consider only direct projection if True.\n        Nz: number of layers to be consider for the scene\n        Hc: height of the can scene\n        Ds: diameter of the sphere for nested radiosity\n        debug : print messages and prevent removal of tempdir\n        resdir : store caribu results as files in resdir if resdir is not None, store nothing otherwise\n        wavelength: list of name to be used as keys for output dict (if None use the name of the opt files or the generic names band0,band1 if optfiles are given as content)'}],
                outputs=[{'interface': None, 'name': 'irradiances', 'desc': ''}, {'interface': None, 'name': 'Settings', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




_135112688 = CompositeNodeFactory(name='vcaribu_test',
                             description='Test of vcaribu',
                             category='composite',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('alinea.caribu', 'vcaribu'),
   3: ('alinea.caribu.data', 'filterT.can'),
   4: ('alinea.caribu.data', 'zenith.light'),
   5: ('alinea.caribu.data', 'par.opt'),
   6: ('openalea.data structure.dict', 'dict'),
   7: ('openalea.flow control', 'annotation')},
                             elt_connections={  16790896: (5, 0, 2, 2),
   16790908: (3, 0, 2, 0),
   16790920: (4, 0, 2, 1),
   16790932: (6, 0, 2, 4)},
                             elt_data={  2: {  'block': False,
         'caption': 'vcaribu',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 195.46600843048085,
         'posy': 235.00000000000003,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'filterT.can',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 56.25,
         'posy': 118.75,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'zenith.light',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 112.5,
         'posy': 53.75,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': 'par.opt',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 222.5,
         'posy': 97.5,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': 'Caribu options',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 362.96600843048077,
         'posy': 139.5339915695191,
         'priority': 0,
         'user_application': None},
   7: {  'posx': 66.63928340912645,
         'posy': 3.9199578475956756,
         'txt': 'Test of vcaribu, the visualea interface to the caribu script (class Caribu)'},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [(3, 'None')],
   3: [  (0, 'PackageData(alinea.caribu.data, filterT.can)'),
         (1, 'None'),
         (2, 'None')],
   4: [  (0, 'PackageData(alinea.caribu.data, zenith.light)'),
         (1, 'None'),
         (2, 'None')],
   5: [  (0, 'PackageData(alinea.caribu.data, par.opt)'),
         (1, 'None'),
         (2, 'None')],
   6: [  (  0,
            "{'Hc': None, 'Nz': None, 'Ds': None, '1st': True, 'infinity': False}")],
   7: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




mydict_mydict = Factory(name='mydict',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='debug dict',
                category='Unclassified',
                nodemodule='mydict',
                nodeclass='mydict',
                inputs=[{'interface': None, 'name': 'liste of tuple', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'dict', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




CaribuScene_functional_addSoil = Factory(name='addSoil',
                authors='C. Fournier',
                description='',
                category='scene.ecophysiology',
                nodemodule='CaribuScene_functional',
                nodeclass='addSoil',
                inputs=[{'interface': IData, 'name': 'CaribuScene', 'value': None, 'desc': ''}, 
                {'interface': IFloat, 'name': 'altitude (z)', 'value': 0.0}, 
                {'interface': IBool, 'name': 'Copy Caribuscene', 'value': True, 'desc': ''}],
                outputs=[{'interface': IData, 'name': 'CaribuScene', 'desc': ''}, {'interface': IDict, 'name': 'Soil_id2Caribu_id', 'desc': 'mapping of soil id to internal caribu id'}],
                widgetmodule=None,
                widgetclass=None,
               )




CaribuScene_functional_output_by_id = Factory(name='Output by id',
                authors='C. Fournier',
                description='',
                category='io',
                nodemodule='CaribuScene_functional',
                nodeclass='output_by_id',
                inputs=[{'interface': None, 'name': 'CaribuScene', 'value': None, 'desc': ''},{'interface': None, 'name': 'Caribu Outputs', 'value': None, 'desc': ''}, {'interface': None, 'name': 'user_id -> caribu_id dict', 'value': None, 'desc': 'if given uses user id instead of caribu internal id as a key'}, {'interface': IBool, 'name': 'aggregate', 'value': True, 'desc': 'should results (one per triangle) be aggregated by objects ?'}],
                outputs=[{'interface': IDict, 'name': 'Output dict', 'desc': 'keys:can_id,values = variable'}],
                widgetmodule=None,
                widgetclass=None,
               )




CaribuScene_functional_getIncidentEnergy = Factory(name='getIncidentEnergy',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='',
                category='scene.light',
                nodemodule='CaribuScene_functional',
                nodeclass='getIncidentEnergy',
                inputs=[{'interface': None, 'name': 'CaribuScene'}],
                outputs=[{'interface': IFloat, 'name': 'Qi', 'desc': 'incident light flux received on an horizontal surface (per scene unit area)'}, {'interface': IFloat, 'name': 'Qem', 'desc': 'sum of light fluxes emitted by sources in a plane perpendicular to their direction of emmission (per scene unit area)'}, {'interface': IFloat, 'name': 'Einc', 'desc': 'total incident energy received on the domain (Einc = Qi * domain_area), or None if pattern is not set'}],
                widgetmodule=None,
                widgetclass=None,
               )




selectOutput_selectOutput = Factory(name='selectOutput',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='Select a variable in the output dictionnary of caribu',
                category='Unclassified',
                nodemodule='selectOutput',
                nodeclass='selectOutput',
                inputs=[{'interface': None, 'name': 'EnergyLabel', 'value': None, 'desc': ''}, {'interface': IEnumStr(enum=['Eabs', 'Einc', 'EincSup', 'EincInf', 'Area', 'Eabsm2', 'EiInf', 'EiSup', 'Opt', 'Opak', 'Plt', 'Elt', 'label']), 'name': 'variable', 'value': None, 'desc': 'Eabs is absorbed radiation, Einc is incident radiation on objects'}],
                outputs=[{'interface': None, 'name': 'selected output', 'desc': ''}, {'interface': None, 'name': 'key', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




PARsums = CompositeNodeFactory(name='PARsums',
                             description='Sums of Eabs for different scene elements',
                             category='data i/o',
                             doc='',
                             inputs=[{  'desc': '', 'interface': None, 'name': 'CaribuOut', 'value': None}],
                             outputs=[{  'desc': '', 'interface': None, 'name': 'sumdict'}],
                             elt_factory={  2: ('alinea.caribu', 'PARaggregators'),
   3: ('alinea.caribu', 'filterby'),
   4: ('openalea.function operator', 'function'),
   5: ('openalea.python method', 'getitem'),
   6: ('openalea.python method', 'sum'),
   7: ('openalea.data structure.string', 'string'),
   8: ('alinea.caribu', 'filterby'),
   9: ('openalea.function operator', 'function'),
   10: ('openalea.python method', 'getitem'),
   11: ('openalea.python method', 'sum'),
   12: ('openalea.data structure.string', 'string'),
   13: ('openalea.python method', 'getitem'),
   14: ('openalea.data structure.string', 'string'),
   15: ('alinea.caribu', 'filterby'),
   16: ('openalea.function operator', 'function'),
   17: ('openalea.python method', 'sum'),
   18: ('openalea.python method', 'getitem'),
   19: ('openalea.data structure.string', 'string'),
   20: ('alinea.caribu', 'filterby'),
   21: ('openalea.function operator', 'function'),
   22: ('openalea.python method', 'sum'),
   23: ('openalea.python method', 'getitem'),
   24: ('openalea.data structure.string', 'string'),
   25: ('alinea.caribu', 'filterby'),
   26: ('openalea.function operator', 'function'),
   27: ('openalea.python method', 'getitem'),
   28: ('openalea.python method', 'sum'),
   29: ('openalea.data structure.string', 'string'),
   30: ('openalea.python method', 'zip'),
   31: ('alinea.caribu', 'mydict')},
                             elt_connections={  10018732: (2, 0, 23, 0),
   10018744: (13, 0, 15, 1),
   10018756: (20, 0, 22, 0),
   10018768: (22, 0, 30, 1),
   10018780: (16, 0, 15, 2),
   10018792: (26, 0, 25, 2),
   10018804: (29, 0, 27, 1),
   10018816: (14, 0, 13, 1),
   10018828: (5, 0, 3, 0),
   10018840: (19, 0, 30, 0),
   10018852: (8, 0, 11, 0),
   10018864: (13, 0, 8, 1),
   10018876: (13, 0, 20, 1),
   10018888: (25, 0, 28, 0),
   10018900: (7, 0, 30, 0),
   10018912: (17, 0, 30, 1),
   10018924: (13, 0, 25, 1),
   10018936: (12, 0, 30, 0),
   10018948: ('__in__', 0, 2, 0),
   10018960: (2, 0, 18, 0),
   10018972: (11, 0, 30, 1),
   10018984: (24, 0, 23, 1),
   10018996: (4, 0, 3, 2),
   10019008: (30, 0, 31, 0),
   10019020: (18, 0, 15, 0),
   10019032: (13, 0, 3, 1),
   10019044: (21, 0, 20, 2),
   10019056: (19, 0, 18, 1),
   10019068: (24, 0, 30, 0),
   10019080: (9, 0, 8, 2),
   10019092: (23, 0, 20, 0),
   10019104: (2, 0, 5, 0),
   10019116: (3, 0, 6, 0),
   10019128: (7, 0, 5, 1),
   10019140: (29, 0, 30, 0),
   10019152: (15, 0, 17, 0),
   10019164: (27, 0, 25, 0),
   10019176: (12, 0, 10, 1),
   10019188: (6, 0, 30, 1),
   10019200: (2, 0, 27, 0),
   10019212: (28, 0, 30, 1),
   10019224: (2, 0, 10, 0),
   10019236: (10, 0, 8, 0),
   10019248: ('__in__', 0, 13, 0),
   10019260: (31, 0, '__out__', 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'PARaggregators',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 69.7235814005445,
         'posy': 92.92864349577206,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'filterby',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -171.2740694710635,
         'posy': 267.64489661153095,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'f',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -140.25829716739622,
         'posy': 228.16717782253733,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'getitem',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -184.66886914838165,
         'posy': 191.82490630075426,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'sum',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -159.59189337038447,
         'posy': 319.38024791453745,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': "'Green'",
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -205.89256249672724,
         'posy': 20.94633804466028,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'filterby',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -309.5722113712998,
         'posy': 273.94844010782913,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'f',
         'hide': True,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -280.13514032699686,
         'posy': 232.9154503087275,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'getitem',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -324.0,
          'posy': 197.96583763784142,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'sum',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -297.89003527062096,
          'posy': 325.6837914108356,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': "'Total'",
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -316.5607238633362,
          'posy': 20.94633804466028,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'getitem',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 188.59205589920793,
          'posy': 93.31697832580286,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': "'Eabs'",
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 203.58203610176145,
          'posy': -55.0,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'filterby',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 288.9881219048475,
          'posy': 272.21347410652197,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'f',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 318.4251929491504,
          'posy': 231.18048430742033,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': 'sum',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 300.6702980055263,
          'posy': 323.94882540952847,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': 'getitem',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 290.1078156284258,
          'posy': 169.22734965626117,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': "'Leaves'",
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 307.3665543033708,
          'posy': 20.94633804466028,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   20: {  'block': False,
          'caption': 'filterby',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -36.76539818109575,
          'posy': 266.48545429252465,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   21: {  'block': False,
          'caption': 'f',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -6.510038591935995,
          'posy': 222.9975988588527,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': 'sum',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -25.08322208041693,
          'posy': 326.4036910440987,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'getitem',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -35.64570445751747,
          'posy': 186.41140909825305,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   24: {  'block': False,
          'caption': "'Stem'",
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -18.386965782572588,
          'posy': 20.94633804466028,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': 'filterby',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 442.8263683379183,
          'posy': 289.39753354851393,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   26: {  'block': False,
          'caption': 'f',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 472.26343938222124,
          'posy': 248.3645437494123,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   27: {  'block': False,
          'caption': 'getitem',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 427.58029116436126,
          'posy': 207.68691126452887,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   28: {  'block': False,
          'caption': 'sum',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 454.50854443859714,
          'posy': 341.13288485152043,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   29: {  'block': False,
          'caption': "'Soil'",
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 435.8378558458819,
          'posy': 20.94633804466028,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   30: {  'block': False,
          'caption': 'zip',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 86.87957511849146,
          'posy': 416.43814419434943,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   31: {  'block': False,
          'caption': 'mydict',
          'hide': True,
          'is_in_error_state': False,
          'is_user_application': False,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 78.83729038306242,
          'posy': 460.79036965272695,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'is_in_error_state': False,
                'is_user_application': False,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 74.13171969111062,
                'posy': -115.0,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'is_in_error_state': False,
                 'is_user_application': False,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 74.13171969111062,
                 'posy': 510.2804472275931,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [],
   4: [(0, "'def f(x):\\n    return x'")],
   5: [],
   6: [],
   7: [(0, "'Green'")],
   8: [],
   9: [(0, "'def f(x):\\n    return x'")],
   10: [],
   11: [],
   12: [(0, "'Total'")],
   13: [],
   14: [(0, "'Eabs'")],
   15: [],
   16: [(0, "'def f(x):\\n    return x'")],
   17: [],
   18: [],
   19: [(0, "'Leaves'")],
   20: [],
   21: [(0, "'def f(x):\\n    return x'")],
   22: [],
   23: [],
   24: [(0, "'Stem'")],
   25: [],
   26: [(0, "'def f(x):\\n    return x'")],
   27: [],
   28: [],
   29: [(0, "'Soil'")],
   30: [],
   31: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [69.7235814005445, 92.92864349577206],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-171.2740694710635, 267.64489661153095],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-140.25829716739622, 228.16717782253733],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-184.66886914838165, 191.82490630075426],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-159.59189337038447, 319.38024791453745],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-205.89256249672724, 20.94633804466028],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-309.5722113712998, 273.94844010782913],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-280.13514032699686, 232.9154503087275],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-324.0, 197.96583763784142],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-297.89003527062096, 325.6837914108356],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-316.5607238633362, 20.94633804466028],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [188.59205589920793, 93.31697832580286],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [203.58203610176145, -55.0],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [288.9881219048475, 272.21347410652197],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [318.4251929491504, 231.18048430742033],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [300.6702980055263, 323.94882540952847],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [290.1078156284258, 169.22734965626117],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [307.3665543033708, 20.94633804466028],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-36.76539818109575, 266.48545429252465],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-6.510038591935995, 222.9975988588527],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [-25.08322208041693, 326.4036910440987],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-35.64570445751747, 186.41140909825305],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-18.386965782572588, 20.94633804466028],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [442.8263683379183, 289.39753354851393],
          'useUserColor': False,
          'userColor': None},
   26: {  'position': [472.26343938222124, 248.3645437494123],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [427.58029116436126, 207.68691126452887],
          'useUserColor': False,
          'userColor': None},
   28: {  'position': [454.50854443859714, 341.13288485152043],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [435.8378558458819, 20.94633804466028],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [86.87957511849146, 416.43814419434943],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [78.83729038306242, 460.79036965272695],
          'useUserColor': False,
          'userColor': None},
   32: {  'position': [-74.60644186950802, 74.17067644599638],
          'useUserColor': False,
          'userColor': None},
   33: {  'position': [-119.28959008736796, 33.49304396111299],
          'useUserColor': False,
          'userColor': None},
   34: {  'position': [-92.36133681313211, 166.93901754810452],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [-111.03202540584729, -153.2475292587556],
          'useUserColor': False,
          'userColor': None},
   50: {  'position': [180.23928841047382, 809.4079155470351],
          'useUserColor': False,
          'userColor': None},
   51: {  'position': [305.40546091774723, 971.2894986564421],
          'useUserColor': False,
          'userColor': None},
   52: {  'position': [388.8495759225963, 922.8919119536297],
          'useUserColor': False,
          'userColor': None},
   53: {  'position': [278.7033441161956, 892.8520305518841],
          'useUserColor': False,
          'userColor': None},
   54: {  'position': [317.0876370184261, 1023.0248499594486],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [74.13171969111062, -115.0],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [74.13171969111062, 510.2804472275931],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




Tutorial = CompositeNodeFactory(name='Tutorial',
                             description='',
                             category='composite,tutorial',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('alinea.caribu', 'Caribu'),
   3: ('alinea.caribu', 'CaribuScene'),
   4: ('alinea.caribu.visualisation', 'Plot CaribuScene'),
   5: ('alinea.caribu.visualisation', 'ViewMapOnCan'),
   6: ('openalea.file', 'start'),
   7: ('openalea.file', 'start'),
   8: ('openalea.file', 'start'),
   9: ('openalea.file', 'start'),
   10: ('alinea.adel.wheat', 'Write_Table'),
   11: ('alinea.caribu', 'LIE'),
   12: ('alinea.caribu', 'addSoil'),
   13: ('alinea.caribu', 'selectOutput'),
   14: ('openalea.data structure', 'int'),
   15: ('alinea.caribu.visualisation', 'colorScale'),
   16: ('openalea.math', 'min'),
   17: ('openalea.math', 'max'),
   18: ('openalea.data structure', 'float'),
   19: ('openalea.data structure', 'float'),
   20: ('openalea.data file', 'get_data'),
   21: ('openalea.data file', 'get_data'),
   22: ('openalea.data file', 'get_data'),
   23: ('openalea.data file', 'get_data')},
                             elt_connections={  4961508: (20, 0, 6, 0),
   4961520: (18, 0, 5, 3),
   4961532: (13, 0, 16, 0),
   4961544: (21, 0, 8, 0),
   4961556: (13, 1, 15, 2),
   4961568: (12, 0, 2, 0),
   4961580: (23, 0, 3, 3),
   4961592: (19, 0, 15, 1),
   4961604: (17, 0, 19, 0),
   4961616: (21, 0, 3, 1),
   4961628: (3, 0, 12, 0),
   4961640: (22, 0, 3, 2),
   4961652: (18, 0, 15, 0),
   4961664: (2, 1, 13, 0),
   4961676: (19, 0, 5, 4),
   4961688: (22, 0, 7, 0),
   4961700: (2, 0, 11, 0),
   4961712: (13, 0, 17, 0),
   4961724: (14, 0, 5, 2),
   4961736: (2, 1, 11, 1),
   4961748: (16, 0, 18, 0),
   4961760: (2, 0, 5, 0),
   4961772: (13, 0, 5, 1),
   4961784: (3, 0, 4, 0),
   4961796: (23, 0, 9, 0),
   4961808: (2, 1, 10, 0),
   4961820: (20, 0, 3, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'Caribu',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x07C79AF0> : "Caribu"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 136.25,
         'posy': 431.25,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'CaribuScene',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x07C79C10> : "CaribuScene"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 36.96620878551104,
         'posy': 183.96400599483476,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'Plot CaribuScene',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x08E07F10> : "Plot CaribuScene"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -85.0,
         'posy': 365.0,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'ViewMapOnCan',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x08E07F70> : "ViewMapOnCan"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 367.0674303064819,
         'posy': 621.9407543154739,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'start',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0949C890> : "start"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 59.11023541853166,
         'posy': 70.02289426502992,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'start',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0949C890> : "start"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 305.5511770926588,
         'posy': 67.29145894411536,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'start',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0949C890> : "start"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 162.7772238509744,
         'posy': 68.20084718132361,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'start',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0949C890> : "start"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 437.4124714878451,
         'posy': 69.11023541853177,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'Write_Table',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x097BDFB0> : "Write_Table"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 577.4999999999999,
          'posy': 472.4999999999999,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'LIE',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x07C5CDD0> : "LIE"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 141.25,
          'posy': 573.75,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'addSoil',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x07C79B50> : "addSoil"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 108.75,
          'posy': 297.5,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'selectOutput',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x07C799F0> : "selectOutput"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 350.0,
          'posy': 485.0,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': '1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08BA0ED0> : "int"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 395.19512719420374,
          'posy': 557.5835093861078,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'colorScale',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08E07F50> : "colorScale"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 564.9543655155713,
          'posy': 621.5211608804805,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'min',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08455830> : "min"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 467.9154566309955,
          'posy': 519.8199993858218,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': 'max',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x084559D0> : "max"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 510.53419611406684,
          'posy': 518.872068084441,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': '0.0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08BA0E10> : "float"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 469.60352077632126,
          'posy': 558.8076830198584,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': '7.1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x08BA0E10> : "float"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 512.4142471187716,
          'posy': 556.5036606414395,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   20: {  'block': False,
          'caption': "get 'can' data",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x097013B0> : "get_data"',
          'hide': True,
          'id': 20,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -66.3853413161973,
          'posy': 26.37225887903727,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   21: {  'block': False,
          'caption': "get 'light' data",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x097013B0> : "get_data"',
          'hide': True,
          'id': 21,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 78.20411779061345,
          'posy': 23.640823558122655,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': "get '8' data",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x097013B0> : "get_data"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 232.80011811600428,
          'posy': 22.731435320914514,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': "get 'opt' data",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x097013B0> : "get_data"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 363.7520242739822,
          'posy': 18.18449413487359,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (1, 'True'),
         (2, "{'SphereDiameter': 0.5, 'Nz': 5, 'Zmax': 2}"),
         (3, 'True')],
   3: [  (  0,
            "'d:\\\\openaleapkg\\\\caribu\\\\src\\\\caribu\\\\data\\\\f331s1_100plantes.can'"),
         (  1,
            "'d:\\\\openaleapkg\\\\caribu\\\\src\\\\caribu\\\\data\\\\zenith.light'"),
         (  2,
            "'d:\\\\openaleapkg\\\\caribu\\\\src\\\\caribu\\\\data\\\\maize.8'"),
         (  3,
            "'d:\\\\openaleapkg\\\\caribu\\\\src\\\\caribu\\\\data\\\\par.opt'")],
   4: [],
   5: [],
   6: [],
   7: [],
   8: [],
   9: [],
   10: [(1, 'None'), (2, 'True')],
   11: [],
   12: [(1, '0.0'), (2, 'True')],
   13: [(1, "'EiSup'")],
   14: [(0, '1')],
   15: [],
   16: [],
   17: [],
   18: [],
   19: [],
   20: [  (0, "'alinea.caribu.data'"),
          (1, "'*.can'"),
          (2, "'f331s1_100plantes.can'")],
   21: [(0, "'alinea.caribu.data'"), (1, "'*.light'"), (2, "'zenith.light'")],
   22: [(0, "'alinea.caribu.data'"), (1, "'*.8'"), (2, "'maize.8'")],
   23: [(0, "'alinea.caribu.data'"), (1, "'*.opt'"), (2, "'par.opt'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [136.25, 431.25], 'useUserColor': False, 'userColor': None},
   3: {  'position': [36.96620878551104, 183.96400599483476],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-85.0, 365.0], 'useUserColor': False, 'userColor': None},
   5: {  'position': [367.0674303064819, 621.9407543154739],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [59.11023541853166, 70.02289426502992],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [305.5511770926588, 67.29145894411536],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [162.7772238509744, 68.20084718132361],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [437.4124714878451, 69.11023541853177],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [577.4999999999999, 472.4999999999999],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [141.25, 573.75],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [108.75, 297.5], 'useUserColor': False, 'userColor': None},
   13: {  'position': [350.0, 485.0], 'useUserColor': False, 'userColor': None},
   14: {  'position': [395.19512719420374, 557.5835093861078],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [564.9543655155713, 621.5211608804805],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [467.9154566309955, 519.8199993858218],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [510.53419611406684, 518.872068084441],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [469.60352077632126, 558.8076830198584],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [512.4142471187716, 556.5036606414395],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-66.3853413161973, 26.37225887903727],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [78.20411779061345, 23.640823558122655],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [232.80011811600428, 22.731435320914514],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [363.7520242739822, 18.18449413487359],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [20.0, 5.0],
                'useUserColor': True,
                'userColor': None},
   '__out__': {  'position': [20.0, 250.0],
                 'useUserColor': True,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




debug = CompositeNodeFactory(name='debug',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('alinea.caribu', 'Periodise'),
   3: ('alinea.caribu', 'FileCaribuScene'),
   4: ('alinea.caribu.visualisation', 'Plot CaribuScene'),
   5: ('alinea.caribu.visualisation', 'ViewMapOnCan'),
   6: ('alinea.caribu.data', 'f331s1_100plantes.can'),
   7: ('alinea.caribu.data', 'maize.8'),
   8: ('alinea.caribu.data', 'par.opt'),
   9: ('alinea.caribu.data', 'zenith.light'),
   10: ('alinea.caribu', 'selectOutput'),
   11: ('alinea.caribu', 'addSoil'),
   12: ('alinea.caribu.data', 'filterT.can'),
   13: ('alinea.caribu', 'selectOutput'),
   14: ('alinea.caribu', 'Scattering Options'),
   15: ('alinea.caribu', 'S2v'),
   16: ('alinea.caribu', 'MCSail'),
   17: ('alinea.caribu', 'Canestra'),
   18: ('alinea.caribu', 'GenOutput'),
   19: ('alinea.caribu', 'filterby'),
   20: ('system', 'X'),
   21: ('openalea.math', 'not'),
   22: ('openalea.data structure', '#list'),
   24: ('openalea.functional', 'map'),
   25: ('openalea.functional', 'function')},
                             elt_connections={  9918844: (24, 0, 5, 1),
   9918856: (10, 0, 24, 1),
   9918880: (13, 0, 19, 0),
   9918892: (2, 0, 15, 0),
   9918904: (14, 5, 17, 4),
   9918916: (10, 0, 19, 1),
   9918928: (11, 0, 2, 0),
   9918940: (14, 4, 17, 3),
   9918952: (18, 0, 10, 0),
   9918964: (16, 0, 17, 1),
   9918976: (8, 0, 3, 3),
   9918988: (20, 0, 21, 0),
   9919000: (3, 0, 11, 0),
   9919012: (17, 1, 18, 0),
   9919024: (21, 0, 19, 2),
   9919036: (2, 0, 17, 0),
   9919048: (14, 2, 16, 1),
   9919060: (19, 0, 22, 0),
   9919072: (14, 0, 15, 1),
   9919084: (15, 0, 16, 0),
   9919096: (6, 0, 3, 0),
   9919108: (14, 1, 15, 2),
   9919120: (14, 2, 15, 3),
   9919132: (25, 0, 24, 0),
   9919144: (14, 3, 17, 2),
   9919156: (18, 0, 13, 0),
   9919168: (7, 0, 3, 2),
   9919180: (17, 0, 5, 0),
   9919192: (17, 2, 18, 1),
   9919204: (9, 0, 3, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'Periodise',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 106.25,
         'posy': 325.0,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'FileCaribuScene',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 90.0,
         'posy': 176.25,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'Plot CaribuScene',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 612.5,
         'posy': 330.0,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': 'ViewMapOnCan',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 702.5,
         'posy': 650.0,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': 'f331s1_100plantes.can',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': -21.25,
         'posy': 16.25,
         'priority': 0,
         'user_application': None},
   7: {  'block': False,
         'caption': 'maize.8',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 205.0,
         'posy': 17.5,
         'priority': 0,
         'user_application': None},
   8: {  'block': False,
         'caption': 'par.opt',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 271.25,
         'posy': 66.25,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': 'zenith.light',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 88.75,
         'posy': 67.5,
         'priority': 0,
         'user_application': None},
   10: {  'block': False,
          'caption': 'selectOutput',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 553.75,
          'posy': 770.0,
          'priority': 0,
          'user_application': None},
   11: {  'block': False,
          'caption': 'addSoil',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 126.25,
          'posy': 233.75,
          'priority': 0,
          'user_application': None},
   12: {  'block': False,
          'caption': 'filterT.can',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set([2]),
          'posx': 2.5,
          'posy': 93.75,
          'priority': 0,
          'user_application': None},
   13: {  'block': False,
          'caption': 'selectOutput',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 345.0,
          'posy': 766.25,
          'priority': 0,
          'user_application': None},
   14: {  'block': False,
          'caption': 'Scattering Options',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 253.75,
          'posy': 311.25,
          'priority': 0,
          'user_application': None},
   15: {  'block': False,
          'caption': 'S2v',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 233.75,
          'posy': 388.75,
          'priority': 0,
          'user_application': None},
   16: {  'block': False,
          'caption': 'MCSail',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 281.25,
          'posy': 431.25,
          'priority': 0,
          'user_application': None},
   17: {  'block': False,
          'caption': 'Canestra',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 293.75,
          'posy': 531.25,
          'priority': 0,
          'user_application': None},
   18: {  'block': False,
          'caption': 'GenOutput',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 401.25,
          'posy': 646.25,
          'priority': 0,
          'user_application': None},
   19: {  'block': False,
          'caption': 'filterby',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 500.0,
          'posy': 882.5,
          'priority': 0,
          'user_application': None},
   20: {  'block': False,
          'caption': 'X1',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 716.25,
          'posy': 752.5,
          'priority': 0,
          'user_application': None},
   21: {  'block': False,
          'caption': 'not',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 725.0,
          'posy': 853.75,
          'priority': 0,
          'user_application': None},
   22: {  'block': False,
          'caption': 'list',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 516.25,
          'posy': 941.25,
          'priority': 0,
          'user_application': None},
   24: {  'block': False,
          'caption': 'map',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 750.0,
          'posy': 548.75,
          'priority': 0,
          'user_application': None},
   25: {  'block': False,
          'caption': 'function',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 710.0,
          'posy': 475.0,
          'priority': 0,
          'user_application': None},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0,
                'user_application': None},
   '__out__': {  'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [],
   3: [],
   4: [(0, 'None')],
   5: [(0, '<60241864.FileCaribuScene object at 0x06ADCA70>')],
   6: [  (0, 'PackageData(alinea.caribu.data, f331s1_100plantes.can)'),
         (1, 'None'),
         (2, 'None')],
   7: [  (0, 'PackageData(alinea.caribu.data, maize.8)'),
         (1, 'None'),
         (2, 'None')],
   8: [  (0, 'PackageData(alinea.caribu.data, par.opt)'),
         (1, 'None'),
         (2, 'None')],
   9: [  (0, 'PackageData(alinea.caribu.data, zenith.light)'),
         (1, 'None'),
         (2, 'None')],
   10: [(1, "'Eabsm2'")],
   11: [],
   12: [  (0, 'PackageData(alinea.caribu.data, filterT.can)'),
          (1, 'None'),
          (2, 'None')],
   13: [(1, "'Opt'")],
   14: [(0, 'True'), (1, "{'SphereDiameter': 0.5, 'Nz': 5, 'Zmax': 2}")],
   15: [],
   16: [],
   17: [],
   18: [],
   19: [],
   20: [(0, "'x'")],
   21: [],
   22: [],
   24: [],
   25: [  (  0,
             "'from math import log\\ndef f(x):\\n    if x > 0:\\n       return log(x)\\n    else:\\n        return log(1e-3)'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  },
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




lightString_lightString = Factory(name='light string',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='return a string formated for caribu light input from radiance plus azimutal and zenital angles',
                category='Unclassified',
                nodemodule='lightString',
                nodeclass='lightString',
                inputs=[{'interface': IFloat, 'name': 'Radiance', 'value': 1, 'desc': ''}, {'interface': IFloat, 'name': 'Zenith angle (deg)', 'value': 0, 'desc': ''}, {'interface': IFloat, 'name': 'Azimuth angle (deg)', 'value': 46, 'desc': ''}],
                outputs=[{'interface': IStr, 'name': 'vector', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )

CaribuScene_functional_generate_scene = Factory(name='generate scene',
                authors='C. Fournier, C Pradal',
                description='generate a PlantGL scene form a Caribu Scene',
                category='scene',
                nodemodule='CaribuScene_functional',
                nodeclass='generate_scene',
                inputs=[{'interface': None, 'name': 'CaribuScene'},
                    {'interface': ISequence, 'name': 'colors', 'value': None}],
                outputs=[{'interface': None, 'name': 'PlantGL scene'}],
                widgetmodule=None,
                widgetclass=None,
               )
__all__.append('CaribuScene_functional_generate_scene')

CaribuScene_functional_getEi = Factory(name='get Ei',
                authors='M. Chelle,C. Fournier (wralea authors)',
                description='',
                category='scene.light',
                nodemodule='CaribuScene_functional',
                nodeclass='getEi',
                inputs=[{'interface': None, 'name': 'CaribuScene'}],
                outputs=[{'interface': IFloat, 'name': 'Qi', 'desc': 'incident light flux received on an horizontal surface (per scene unit area)'}],
                widgetmodule=None,
                widgetclass=None,
               )




